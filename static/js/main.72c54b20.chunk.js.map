{"version":3,"sources":["firebase.js","Components/Nweet.js","Components/NweetCreate.js","Routes/Home.js","Module/CommonFunction.js","Module/HomeFunction.js","Container/HomeContainer.js","Components/Navigation.js","Routes/Profile.js","Module/ProfileFunction.js","Container/ProfileContainer.js","Routes/Auth.js","Module/AuthFunction.js","Container/AuthContainer.js","Components/Router.js","Components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","Nweet","nweet","isOwned","useState","edit","setEdit","text","setText","onDeleteClick","a","window","confirm","dataUrl","refFromURL","delete","collection","doc","id","onEditClick","onEditSubmit","e","preventDefault","update","className","onSubmit","type","placeholder","value","onChange","target","autoFocus","onClick","src","alt","icon","faTrash","faPencilAlt","NweetCreate","onFileChange","fileUrl","clearImg","maxLength","htmlFor","faPlus","accept","style","opacity","backgroundImage","faTimes","Home","homeProps","userObj","nweets","marginTop","map","key","creatorID","uid","fn","theFile","files","reader","FileReader","readAsDataURL","onloadend","finishedEvent","result","currentTarget","setFileUrl","setNweet","ref","child","uuidv4","putString","response","getDownloadURL","add","createAt","Date","now","console","log","propsCreateFn","setNweets","getNweets","onSnapshot","snapshot","nweetArray","docs","data","HomeContainer","useEffect","Navigation","display","justifyContent","to","marginRight","faTwitter","color","size","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","profileProps","onSignOut","newDisplayName","width","height","photoURL","refreshUser","editFlag","bucketEmpty","alert","listAll","bucket","items","length","updateProfile","setNewDisplayName","history","signOut","push","ProfileContainer","useHistory","Auth","authProps","onToggle","onSocial","email","password","newAccount","marginBottom","name","required","faGoogle","faGithub","createUserWithEmailAndPassword","signInWithEmailAndPassword","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","setNewAccount","setEmail","setPassword","prev","AuthContainer","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72c54b20.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from 'react';\r\nimport { dbService, storageService } from '../firebase';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Nweet({ nweet, isOwned }) {\r\n    const collection = 'twitterClone';\r\n\r\n    const [edit, setEdit] = useState(false);\r\n    const [text, setText] = useState('');\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm('정말 삭제 하시겠습니까?');\r\n        if (ok) {\r\n            //삭제 컬렉션 doc가 먼저 삭제되면 url을 읽을수 없으므로 파일 먼저 삭제\r\n            if (nweet.dataUrl) {\r\n                await storageService.refFromURL(nweet.dataUrl).delete();\r\n            }\r\n            await dbService.collection(collection).doc(nweet.id).delete();\r\n        }\r\n    };\r\n\r\n    const onEditClick = () => {\r\n        setEdit(!edit);\r\n    };\r\n\r\n    const onEditSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await dbService.collection(collection).doc(nweet.id).update({\r\n            nweet: text\r\n        });\r\n        setEdit(!edit);\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const { target: { value } } = e;\r\n        setText(value);\r\n\r\n    };\r\n    return (\r\n        <div className=\"nweet\">\r\n            {\r\n                (edit) ? (\r\n                    <>\r\n                        <form onSubmit={onEditSubmit} className=\"container nweetEdit\">\r\n                            <input\r\n                                type='text'\r\n                                placeholder=\"Edit your nweet\"\r\n                                value={text}\r\n                                onChange={onChange}\r\n                                autoFocus\r\n                                className=\"formInput\"\r\n                            />\r\n                            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                        </form>\r\n                        <span onClick={onEditClick} className=\"formBtn cancelBtn\">\r\n                            Cancel\r\n                        </span>\r\n                    </>) :\r\n                    (\r\n                        <>\r\n                            <h3>{nweet.nweet}</h3>\r\n                            {nweet.dataUrl && <img src={nweet.dataUrl} alt=\"\" />}\r\n                            {isOwned && (\r\n                                <>\r\n                                    <div className=\"nweet__actions\">\r\n                                        <span onClick={onDeleteClick}>\r\n                                            <FontAwesomeIcon icon={faTrash} />\r\n                                        </span>\r\n                                        <span onClick={onEditClick}>\r\n                                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                                        </span>\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </>)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nweet;","import React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction NweetCreate({ onChange, onSubmit, onFileChange, nweet, fileUrl, clearImg }) {\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"factoryForm\">\r\n                <div className=\"factoryInput__container\">\r\n                    <input\r\n                        type='text'\r\n                        placeholder=\"what's on your mind?\"\r\n                        maxLength={120}\r\n                        className=\"factoryInput__input\"\r\n                        onChange={onChange}\r\n                        value={nweet}\r\n                    />\r\n                    <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n                </div>\r\n                <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                    <span>Add photos</span>\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                </label>\r\n                <input\r\n                    id=\"attach-file\"\r\n                    type='file'\r\n                    accept='image/*'\r\n                    onChange={onFileChange}\r\n                    style={{\r\n                        opacity: 0,\r\n                    }}\r\n                />\r\n            </form>\r\n            {\r\n                fileUrl && (\r\n                    <div className=\"factoryForm__attachment\">\r\n                        <img\r\n                            src={fileUrl}\r\n                            alt=\"\"\r\n                            style={{\r\n                                backgroundImage: fileUrl,\r\n                            }}\r\n                        />\r\n                        <div className=\"factoryForm__clear\" onClick={clearImg}>\r\n                            <span>Remove</span>\r\n                            <FontAwesomeIcon icon={faTimes} />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NweetCreate;","import React from 'react';\r\nimport Nweet from '../Components/Nweet';\r\nimport NweetCreate from '../Components/NweetCreate';\r\n\r\nfunction Home({ homeProps }) {\r\n\r\n    const { userObj, onChange, onSubmit, onFileChange, clearImg, nweets, nweet, fileUrl } = homeProps;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetCreate\r\n                onChange={onChange}\r\n                onSubmit={onSubmit}\r\n                onFileChange={onFileChange}\r\n                nweet={nweet}\r\n                fileUrl={fileUrl}\r\n                clearImg={clearImg}\r\n            />\r\n            <div style={{ marginTop: 30 }}>\r\n                {\r\n                    nweets.map(nweet =>\r\n                        <Nweet\r\n                            key={nweet.id}\r\n                            nweet={nweet}\r\n                            isOwned={nweet.creatorID === userObj.uid ? true : false}\r\n                        />)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","export const onChange = (e, fn) => {\r\n    const { target: { value } } = e;\r\n\r\n    fn(value);\r\n};\r\n\r\nexport const onFileChange = (e, fn) => {\r\n    const { target: { files } } = e;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(theFile);\r\n    reader.onloadend = (finishedEvent => {\r\n        const { currentTarget: { result } } = finishedEvent;\r\n        fn(result);\r\n    });\r\n};","import { dbService, storageService } from '../firebase';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { onChange, onFileChange } from './CommonFunction';\r\n\r\nconst collection = 'twitterClone';\r\n\r\n//uid = userobj.uid\r\nconst onSubmit = async (e, uid, fileUrl, setFileUrl, nweet, setNweet) => {\r\n    e.preventDefault();\r\n    try {\r\n        let dataUrl = \"\";\r\n        if (fileUrl) {\r\n            const ref = storageService.ref().child(`${uid}/${uuidv4()}`);\r\n            const response = await ref.putString(fileUrl, 'data_url');\r\n            dataUrl = await response.ref.getDownloadURL();\r\n            setFileUrl(null);\r\n        }\r\n        await dbService.collection(collection).add({\r\n            nweet,\r\n            createAt: Date.now(),\r\n            creatorID: uid,\r\n            dataUrl,\r\n        });\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n    setNweet('');\r\n};\r\n\r\nconst clearImg = (setFileUrl) => {\r\n    setFileUrl(null);\r\n};\r\n\r\nconst getNweets = (setNweets) => {\r\n    dbService.collection(collection).onSnapshot(snapshot => {\r\n        const nweetArray = snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            ...doc.data()\r\n        }));\r\n        setNweets(nweetArray);\r\n    });\r\n};\r\n\r\nconst propsCreateFn = (userObj, setNweet, setNweets, fileUrl, setFileUrl, nweet, nweets) => ({\r\n    userObj,\r\n    onChange: (e) => onChange(e, setNweet),\r\n    onSubmit: (e) => onSubmit(e, userObj.uid, fileUrl, setFileUrl, nweet, setNweet),\r\n    onFileChange: (e) => onFileChange(e, setFileUrl),\r\n    clearImg: () => clearImg(setFileUrl),\r\n    getNweets: () => getNweets(setNweets),\r\n    nweets,\r\n    nweet,\r\n    fileUrl\r\n});\r\n\r\nexport default propsCreateFn;","import React, { useEffect, useState } from 'react';\r\nimport Home from '../Routes/Home';\r\nimport propsCreateFn from '../Module/HomeFunction';\r\n\r\nfunction HomeContainer({ userObj }) {\r\n    const [nweet, setNweet] = useState('');\r\n    const [nweets, setNweets] = useState([]);\r\n    const [fileUrl, setFileUrl] = useState(null);\r\n\r\n    let homeProps = propsCreateFn(userObj, setNweet, setNweets, fileUrl, setFileUrl, nweet, nweets);\r\n\r\n\r\n    useEffect(() => {\r\n        homeProps.getNweets();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <Home homeProps={homeProps} />\r\n    );\r\n}\r\n\r\nexport default HomeContainer;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Navigation({ userObj }) {\r\n\r\n    return (\r\n        <nav>\r\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n                <li>\r\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link\r\n                        to=\"/profile\"\r\n                        style={{\r\n                            marginLeft: 10,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                            fontSize: 12,\r\n                        }}\r\n                    >\r\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                        <span style={{ marginTop: 10 }}>\r\n                            {userObj.displayName\r\n                                ? `${userObj.displayName}의 Profile4`\r\n                                : \"Profile\"}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nfunction Profile({ profileProps }) {\r\n\r\n    const { userObj, onSignOut, onChange, onSubmit, onFileChange, fileUrl, newDisplayName } = profileProps;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {\r\n                userObj && <form onSubmit={onSubmit} className=\"profileForm\">\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Display Name'\r\n                        autoFocus\r\n                        className=\"formInput\"\r\n                        onChange={onChange}\r\n                        value={newDisplayName}\r\n                    />\r\n                    <input\r\n                        type='file'\r\n                        accept='image/*'\r\n                        onChange={onFileChange}\r\n                    />\r\n                    <input\r\n                        type='submit'\r\n                        value='Update Profile'\r\n                        className=\"formBtn\"\r\n                        style={{\r\n                            marginTop: 10,\r\n                        }}\r\n                    />\r\n                </form>\r\n\r\n\r\n            }\r\n            {fileUrl && <div><img src={fileUrl} alt=\"preview\" width=\"50px\" height=\"50px\" /></div>}\r\n            {userObj.photoURL && <div><img src={userObj.photoURL} alt=\"preview\" width=\"50px\" height=\"50px\" /></div>}\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onSignOut}>\r\n                Sign Out\r\n            </span>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import { authService, storageService } from '../firebase';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { onChange, onFileChange } from './CommonFunction';\r\n\r\nconst onSignOut = (history) => {\r\n    authService.signOut();\r\n    history.push('/');\r\n};\r\n\r\nconst onSubmit = async (e, userObj, newDisplayName, fileUrl, setFileUrl, refreshUser) => {\r\n    e.preventDefault();\r\n\r\n    let dataUrl = (userObj.photoURL) ? userObj.photoURL : null;\r\n    let editFlag = true;\r\n    let bucketEmpty = false;\r\n\r\n    if (newDisplayName === '') {\r\n        alert('변경하실 이름을 입력해 주세요.');\r\n        return false;\r\n    }\r\n\r\n    if (\r\n        userObj.displayName !== newDisplayName ||\r\n        userObj.photoURL !== fileUrl\r\n    ) {\r\n        //파일 업로드\r\n        if (fileUrl) {\r\n            try {\r\n\r\n                const bucket = await storageService.ref().child(userObj.uid).listAll();\r\n                bucketEmpty = (bucket.items.length === 0) ? true : false;\r\n\r\n                const ref = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n                const response = await ref.putString(fileUrl, 'data_url');\r\n                dataUrl = await response.ref.getDownloadURL();\r\n\r\n            } catch (e) {\r\n                editFlag = false;\r\n                console.log(e);\r\n            }\r\n        }\r\n\r\n        //파일 업로드시 기존파일 삭제후 새파일로 스토리지에 업로드\r\n        if ((dataUrl && userObj.photoURL) && (dataUrl !== userObj.photoURL) && !bucketEmpty) {\r\n            try {\r\n                await storageService.refFromURL(userObj.photoURL).delete();\r\n            } catch (e) {\r\n                editFlag = false;\r\n                console.log(e);\r\n            }\r\n        }\r\n\r\n        if (editFlag) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n                photoURL: dataUrl\r\n            });\r\n\r\n            refreshUser();\r\n            alert('정상적으로 변경 되었습니다.');\r\n        } else {\r\n            alert('오류가 발생했습니다. 관리자에게 문의하세요.');\r\n        }\r\n\r\n    }\r\n    setFileUrl(null);\r\n};\r\n\r\nconst propsCreateFn = (userObj, fileUrl, newDisplayName, setFileUrl, setNewDisplayName, refreshUser, history) => ({\r\n    userObj,\r\n    onSignOut: () => onSignOut(history),\r\n    onChange: (e) => onChange(e, setNewDisplayName),\r\n    onSubmit: (e) => onSubmit(e, userObj, newDisplayName, fileUrl, setFileUrl, refreshUser),\r\n    onFileChange: (e) => onFileChange(e, setFileUrl),\r\n    fileUrl,\r\n    newDisplayName\r\n});\r\n\r\nexport default propsCreateFn;","import React, { useState } from 'react';\r\nimport Profile from '../Routes/Profile';\r\nimport propsCreateFn from '../Module/ProfileFunction';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction ProfileContainer({ userObj, refreshUser }) {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName ? userObj.displayName : 'escapew');\r\n    const [fileUrl, setFileUrl] = useState(null);\r\n\r\n    const profileProps = propsCreateFn(userObj, fileUrl, newDisplayName, setFileUrl, setNewDisplayName, refreshUser, history);\r\n\r\n    return (\r\n        <Profile\r\n            profileProps={profileProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default ProfileContainer;","import React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nfunction Auth({ authProps }) {\r\n    const { onChange, onToggle, onSubmit, onSocial, email, password, newAccount } = authProps;\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name='email'\r\n                    type='text'\r\n                    placeholder='Email'\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    name='password'\r\n                    type='password'\r\n                    placeholder='password'\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    type='submit'\r\n                    value={newAccount ? 'Create Account' : 'Sign In'}\r\n                    className=\"authInput authSubmit\"\r\n                />\r\n            </form>\r\n            <span onClick={onToggle} className=\"authSwitch\">\r\n                {newAccount ? 'Sign In' : 'Create Account'}\r\n            </span>\r\n            <div className=\"authBtns\">\r\n                <button name='google' onClick={onSocial} className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button name='github' onClick={onSocial} className=\"authBtn\">\r\n                    Continue with GitHub <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Auth;","import { authService, firebaseInstance } from '../firebase';\r\n\r\nconst onToggle = (setNewAccount) => {\r\n    setNewAccount(prev => !prev);\r\n};\r\n\r\nconst onSubmit = async (e, newAccount, email, password) => {\r\n    e.preventDefault();\r\n    try {\r\n        let data;\r\n        if (newAccount) {\r\n            //create account\r\n            data = await authService.createUserWithEmailAndPassword(email, password);\r\n        } else {\r\n            //Log In\r\n            data = await authService.signInWithEmailAndPassword(email, password);\r\n        }\r\n        console.log(data);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nconst onSocial = async (e) => {\r\n    const { target: { name } } = e;\r\n\r\n    let provider;\r\n    if (name === 'google') {\r\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === 'github') {\r\n        provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n};\r\n\r\nconst propsCreateFn = (setNewAccount, setEmail, setPassword, email, password, newAccount) => ({\r\n    onChange: (e) => {\r\n        const { target: { name, value } } = e;\r\n        switch (name) {\r\n            case 'email':\r\n                setEmail(value);\r\n                break;\r\n            case 'password':\r\n                setPassword(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    onToggle: () => onToggle(setNewAccount),\r\n    onSubmit: (e) => onSubmit(e, newAccount, email, password),\r\n    onSocial: (e) => onSocial(e),\r\n    email,\r\n    password,\r\n    newAccount\r\n});\r\n\r\nexport default propsCreateFn;","import React, { useState } from 'react';\r\nimport Auth from '../Routes/Auth';\r\nimport propsCreateFn from '../Module/AuthFunction';\r\n\r\nfunction AuthContainer() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [newAccount, setNewAccount] = useState(true);\r\n\r\n    const authProps = propsCreateFn(setNewAccount, setEmail, setPassword, email, password, newAccount);\r\n\r\n    return (\r\n        <Auth authProps={authProps} />\r\n    );\r\n}\r\n\r\nexport default AuthContainer;","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport HomeContainer from '../Container/HomeContainer';\r\n//import Profile from '../Routes/Profile';\r\nimport Navigation from './Navigation';\r\nimport ProfileContainer from '../Container/ProfileContainer';\r\nimport AuthContainer from '../Container/AuthContainer';\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                <>\r\n                    {\r\n                        isLoggedIn ?\r\n                            (\r\n                                <div\r\n                                    style={{\r\n                                        maxWidth: 890,\r\n                                        width: \"100%\",\r\n                                        margin: \"0 auto\",\r\n                                        marginTop: 80,\r\n                                        display: \"flex\",\r\n                                        justifyContent: \"center\",\r\n                                    }}\r\n                                >\r\n                                    <Route exact path='/'><HomeContainer userObj={userObj} /></Route>\r\n                                    <Route exact path='/Profile'><ProfileContainer userObj={userObj} refreshUser={refreshUser} /></Route>\r\n                                </div>\r\n                            )\r\n                            :\r\n                            <Route exact path='/'><AuthContainer /></Route>\r\n                    }\r\n                </>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService } from \"../firebase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: (user.displayName) ? user.displayName : 'escapew',\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n          photoURL: user.photoURL,\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n      photoURL: user.photoURL\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n          \"Initializing...\"\n        )}\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}